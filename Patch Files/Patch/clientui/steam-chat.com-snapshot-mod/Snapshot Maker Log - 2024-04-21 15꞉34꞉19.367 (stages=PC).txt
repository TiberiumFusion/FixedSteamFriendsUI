Snapshot Maker (v1.1.0.0) :: Started at 4/21/2024 3:34:19 PM
Launch args: /stages:pc

Enabled stages: PC

---------- |  Patching Snapshot  | ----------

Preparing to rewrite inner friends.js javascript
- CLSTMAP = 8825046
Selecting patcher config
- Using patcher config for CLSTAMP 8791341
Initializing CefJsHost
- Creating cef instance... OK
- Binding apis
  - JsDeMinifier... OK
  - ValveFriendsJsRewriter... OK

Rewriting "public/javascript/webui/friends.js"...
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 5305, char 74 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_enter.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_enter.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_voice_channel_enter.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 5305, char 202 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_exit.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_exit.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_voice_channel_exit.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 5454, char 87 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_chatroom_notification.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_chatroom_notification.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_chatroom_notification.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 5457, char 87 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_at_mention.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_at_mention.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_at_mention.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'ShimSettingsStoreIsSteamInTournamentMode' matched >> Line 7917, char 57 >> Node: 
[JS]   - Original JS:  b.Ul.SettingsStore.IsSteamInTournamentMode()
[JS]   - Patched JS:   /*b.Ul.SettingsStore.IsSteamInTournamentMode()*/ TFP.Compat.SettingsStore_IsSteamInTournamentMode(b.Ul.SettingsStore, "IsSteamInTournamentMode")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 8228, char 87 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/ui_steam_smoother_friend_join.m4a"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/ui_steam_smoother_friend_join.m4a"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/ui_steam_smoother_friend_join.m4a", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 8231, char 87 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/ui_steam_smoother_friend_online.m4a"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/ui_steam_smoother_friend_online.m4a"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/ui_steam_smoother_friend_online.m4a", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 8702, char 87 >> Node: 
[JS]   - Original JS:  r.De.COMMUNITY_CDN_URL + "public/sounds/webui/ui_steam_message_old_smooth.m4a"
[JS]   - Patched JS:   /*r.De.COMMUNITY_CDN_URL + "public/sounds/webui/ui_steam_message_old_smooth.m4a"*/ TFP.Resources.SelectCdnResourceUrl(r.De.COMMUNITY_CDN_URL, "public/sounds/webui/ui_steam_message_old_smooth.m4a", "Root", "JsSounds")
[JS] > Detection 'ShimSettingsStoreIsSteamInTournamentMode' matched >> Line 9487, char 57 >> Node: 
[JS]   - Original JS:  h.Ul.SettingsStore.IsSteamInTournamentMode()
[JS]   - Patched JS:   /*h.Ul.SettingsStore.IsSteamInTournamentMode()*/ TFP.Compat.SettingsStore_IsSteamInTournamentMode(h.Ul.SettingsStore, "IsSteamInTournamentMode")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 11384, char 14 >> Node: 
[JS]   - Original JS:  n.p + "javascript/webui/noisegate-audio-worklet.js?contenthash=ef007c9e0249549f997c"
[JS]   - Patched JS:   /*n.p + "javascript/webui/noisegate-audio-worklet.js?contenthash=ef007c9e0249549f997c"*/ TFP.Resources.SelectCdnResourceUrl(n.p, "javascript/webui/noisegate-audio-worklet.js?contenthash=ef007c9e0249549f997c", "Root_Public", "LibraryJs")
[JS] > Detection 'RewriteEarly2024NewWindowGettersUsage' matched >> Line 11613, char 68 >> Node: 
[JS]   - Original JS:  this.m_window.SteamClient.Window.IsWindowMinimized()
[JS]   - Patched JS:   /*this.m_window.SteamClient.Window.IsWindowMinimized()*/ new Promise((e, t) => {
    this.m_window.SteamClient.Window.IsWindowMinimized((t) => {
        e(t);
    });
})
[JS] > Detection 'ShimSettingsStoreIsSteamInTournamentMode' matched >> Line 11640, char 47 >> Node: 
[JS]   - Original JS:  h.Ul.SettingsStore.IsSteamInTournamentMode()
[JS]   - Patched JS:   /*h.Ul.SettingsStore.IsSteamInTournamentMode()*/ TFP.Compat.SettingsStore_IsSteamInTournamentMode(h.Ul.SettingsStore, "IsSteamInTournamentMode")
[JS] > Detection 'ShimSettingsStoreIsSteamInTournamentMode' matched >> Line 11938, char 66 >> Node: 
[JS]   - Original JS:  this.m_FriendsUIApp.SettingsStore.IsSteamInTournamentMode()
[JS]   - Patched JS:   /*this.m_FriendsUIApp.SettingsStore.IsSteamInTournamentMode()*/ TFP.Compat.SettingsStore_IsSteamInTournamentMode(this.m_FriendsUIApp.SettingsStore, "IsSteamInTournamentMode")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 12802, char 155 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_rpt_leave.m4a"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_rpt_leave.m4a"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_rpt_leave.m4a", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 12811, char 204 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_rpt_join.m4a"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_rpt_join.m4a"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_rpt_join.m4a", "Root", "JsSounds")
[JS] > Detection 'ShimSteamClientIsSteamInTournamentMode' matched >> Line 12966, char 588 >> Node: 
[JS]   - Original JS:  SteamClient.System.IsSteamInTournamentMode()
[JS]   - Patched JS:   /*SteamClient.System.IsSteamInTournamentMode()*/ TFP.Compat.SteamClient_System_IsSteamInTournamentMode(SteamClient, "System", "IsSteamInTournamentMode")
[JS] > Detection 'DisableMiniprofileBrokenBlurHandler' matched >> Line 13952, char 31 >> Node: 
[JS]   - Original JS:  {
    this.HideByElement(t.m_OwningElement);
}
[JS]   - Patched JS:   {
    /*this.HideByElement(t.m_OwningElement);*/ ;
}
[JS] > Detection 'ShimSettingsStoreIsSteamInTournamentMode' matched >> Line 14161, char 57 >> Node: 
[JS]   - Original JS:  r.Ul.SettingsStore.IsSteamInTournamentMode()
[JS]   - Patched JS:   /*r.Ul.SettingsStore.IsSteamInTournamentMode()*/ TFP.Compat.SettingsStore_IsSteamInTournamentMode(r.Ul.SettingsStore, "IsSteamInTournamentMode")
[JS] > Detection 'ShimSettingsStoreIsSteamInTournamentMode' matched >> Line 14538, char 210 >> Node: 
[JS]   - Original JS:  r.Ul.SettingsStore.IsSteamInTournamentMode()
[JS]   - Patched JS:   /*r.Ul.SettingsStore.IsSteamInTournamentMode()*/ TFP.Compat.SettingsStore_IsSteamInTournamentMode(r.Ul.SettingsStore, "IsSteamInTournamentMode")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15494, char 168 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_exit.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_exit.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_voice_channel_exit.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15507, char 172 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_exit.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_exit.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_voice_channel_exit.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15554, char 248 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_enter.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_enter.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_voice_channel_enter.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15559, char 333 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_exit.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_voice_channel_exit.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_voice_channel_exit.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15578, char 173 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_phonecall.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_phonecall.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_phonecall.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15972, char 133 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_ui_ptt_short_02_quiet.m4a"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_ui_ptt_short_02_quiet.m4a"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_ui_ptt_short_02_quiet.m4a", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15972, char 254 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_ui_ptt_short_01_quiet.m4a"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_ui_ptt_short_01_quiet.m4a"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_ui_ptt_short_01_quiet.m4a", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15984, char 96 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_ui_ptt_short_01_quiet.m4a"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_ui_ptt_short_01_quiet.m4a"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_ui_ptt_short_01_quiet.m4a", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 15985, char 96 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_ui_ptt_short_02_quiet.m4a"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_ui_ptt_short_02_quiet.m4a"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_ui_ptt_short_02_quiet.m4a", "Root", "JsSounds")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 16525, char 121 >> Node: 
[JS]   - Original JS:  o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_phonecall.m4a?v=1"
[JS]   - Patched JS:   /*o.De.COMMUNITY_CDN_URL + "public/sounds/webui/steam_phonecall.m4a?v=1"*/ TFP.Resources.SelectCdnResourceUrl(o.De.COMMUNITY_CDN_URL, "public/sounds/webui/steam_phonecall.m4a?v=1", "Root", "JsSounds")
[JS] > Detection 'ShimSteamClientBrowserGetBrowserId' matched >> Line 24034, char 299 >> Node: 
[JS]   - Original JS:  n.SteamClient.Browser.GetBrowserID()
[JS]   - Patched JS:   /*n.SteamClient.Browser.GetBrowserID()*/ TFP.Compat.SteamClient_Browser_GetBrowserID(n.SteamClient)
[JS] > Detection 'RewriteSteamClientWindowNewGetterPromises' matched >> Line 24070, char 33 >> Node: 
[JS]   - Original JS:  this.props.target.ownerDocument.defaultView.SteamClient.Window.GetWindowRestoreDetails().then((e) => {
    const t = this.state.x - this.props.target.ownerDocument.defaultView.screenX, n = this.state.y - this.props.target.ownerDocument.defaultView.screenY;
    try {
        this.props.popup.SteamClient.Window.PositionWindowRelative(e, t, n, this.state.width, this.state.height);
    }
    catch (e) {
        console.error(e);
    }
})
[JS]   - Patched JS:   /*this.props.target.ownerDocument.defaultView.SteamClient.Window.GetWindowRestoreDetails().then((e) => {
    const t = this.state.x - this.props.target.ownerDocument.defaultView.screenX, n = this.state.y - this.props.target.ownerDocument.defaultView.screenY;
    try {
        this.props.popup.SteamClient.Window.PositionWindowRelative(e, t, n, this.state.width, this.state.height);
    }
    catch (e) {
        console.error(e);
    }
})*/ this.props.target.ownerDocument.defaultView.SteamClient.Window.GetWindowRestoreDetails((e) => {
    const t = this.state.x - this.props.target.ownerDocument.defaultView.screenX, n = this.state.y - this.props.target.ownerDocument.defaultView.screenY;
    try {
        this.props.popup.SteamClient.Window.PositionWindowRelative(e, t, n, this.state.width, this.state.height);
    }
    catch (e) {
        console.error(e);
    }
})
[JS] > Detection 'FixBrokenInviteListAutoCloseOnDone' matched >> Line 26256, char 13 >> Node: 
[JS]   - Original JS:  {
    let e = this.props.friends.self, t = this.GetNormalizedSearchString(), n = this.state.bFriendTabSearch, i = "friendTab socialListTab activeTab";
    n && (i += " TabSearchActive");
    let r = {};
    this.state.tabLabelWidth > 0 && (r.width = this.state.tabLabelWidth + "px");
    let a = !1;
    if (this.props.popup) {
        let e = (0, m.rb)(this.props.popup);
        a = !(0, d.ns)(e, d.D);
    }
    let s = !1, l = 0, c = !1, h = "friendListButton friendSettingsButton friendsListNeedsUpdate no-drag";
    null != m.g_FriendsUIDesktopApp && ((s = m.g_FriendsUIDesktopApp.BNeedsUpdate()), (l = m.g_FriendsUIDesktopApp.GetSecondsOutOfDate()), l < 432e3 ? (s = !1) : l > 604800 && ((h += " friendsListVeryOutOfDate"), (c = !0)));
    let u = this.props.chats.GetActiveVoiceChat(), p = !1;
    (this.props.chats.VoiceChat.IsAnyVoiceActive() || u) && (p = !0), this.UpdateWindowIcon();
    let _ = d.Ul.SettingsStore.FriendsSettings.bCompactFriendsList, g = this.props.collapsed, C = "friendlist", f = m.g_FriendsUIDesktopApp && m.g_FriendsUIDesktopApp.IsDesktopUIActive();
    _ && (C += " compactView"), s && (C += " needsUpdate"), g && this.props.collapsible && (C += " collapsed");
    const v = d.Ul.FriendStore.BIsOfflineMode(), S = a;
    return I.createElement("div", { className: C }, I.createElement("div", { className: (0, Ce.Z)("friendListHeaderContainer", "titleBarContainer", (0, Oe.Uy)() && "OSX") }, this.props.popup && o.De.IN_CLIENT && I.createElement(me.T, { hideMin: S, hideMax: S, popup: this.props.popup, className: "chatTitleBar" }), this.props.collapsible && I.createElement("div", { className: "friendListCollapse no-drag" }, I.createElement("div", { className: "friendListButton friendCollapseButton no-drag " + (g ? "Collapsed" : ""), onClick: this.ToggleCollapseExpand }, I.createElement(X.NP6, null))), I.createElement(ot, { popup: this.props.popup && this.props.popup, currentUser: e }), I.createElement("div", { className: "friendListButtons" }, s && I.createElement("div", { className: h, onClick: this.OnDoFriendsListUpdate, title: c ? (0, A.Xx)("#Tooltip_FriendsListUpdate_VeryOld") : (0, A.Xx)("#Tooltip_FriendsListUpdate") }, I.createElement(X.Lao, null)), !f && I.createElement("div", { className: "friendListButton friendSettingsButton no-drag", onClick: this.OnSettingsClick, title: (0, A.Xx)("#Tooltip_Settings") }, I.createElement(X.Zrf, null))), !v &&
        I.createElement(I.Fragment, null, I.createElement(U.Z, null, p && I.createElement(V.Z, { key: "activeVoiceControls1", classNames: "activevoice-anim", timeout: 500 }, I.createElement(Ne, { chats: this.props.chats }))), I.createElement(it, { browserContext: this.props.browserContext }), I.createElement(G, { FavoritesStore: this.props.friends.FavoritesStore, bInOverlay: a }), I.createElement("div", { className: "socialTabSearchContainer" }, I.createElement("div", { className: "socialTabContainer" }, I.createElement("div", { className: i }, I.createElement("div", { className: "tabLabel", style: r, ref: this.BindTabLabel, onClick: n ? void 0 : this.OnTabSearchClick }, (0, A.Xx)("#tab_friends")), I.createElement("div", { className: "friendsTabButtonsContainer" }, I.createElement("div", { className: "TabSearchButton", onClick: n ? null : this.OnTabSearchClick }, I.createElement(U.Z, { className: "tabSearchTransitionGroup" }, n && I.createElement(V.Z, { className: "tabSearchTransition", key: "tabSearch", classNames: "tab-search-anim", timeout: 500 }, I.createElement("div", { className: "socialSearchContainer" }, I.createElement("form", { className: "socialInputContainer" + (n ? " SearchActive" : ""), name: "friendSearchForm", onSubmit: this.OnSearchSubmit }, I.createElement("div", { className: "inputContainer no-drag" }, I.createElement("input", { id: "friendSearchInputID", className: "friendSearchInput", autoFocus: !0, type: "text", name: "friendSearch", placeholder: (0, A.Xx)("#SearchFriends"), value: this.state.searchString, onInput: this.OnSearchInput, onKeyDown: this.OnSearchKeyDown, autoComplete: "off", ref: this.OnSearchInputRef }), I.createElement("div", { className: "friendSearchClear", onClick: this.OnClearSearch }, I.createElement(X.pVO, null))))))), I.createElement("div", { className: "searchIconButton", onClick: this.OnTabSearchClick, title: (0, A.Xx)("#Tooltip_SearchFriends") }, I.createElement(X.YtI, null))), I.createElement(Je, { fnToggleViewingIncomingInvites: this.ToggleViewingIncomingInvites, bViewingIncomingInvites: this.state.bViewingIncomingInvites }), I.createElement(P.ns, { href: o.De.COMMUNITY_BASE_URL + "friends/add" }, I.createElement("div", { className: "friendListButton addFriendButton no-drag", title: (0, A.Xx)("#Tooltip_AddFriend") }, I.createElement(X.yBp, null)))))))), I.createElement("div", { className: "disconnectBlocker" })), v ? I.createElement("div", { className: ve.OfflineContainer }, I.createElement("div", { className: ve.OfflineMessage }, I.createElement("div", { className: ve.summaryText }, (0, A.Xx)("#FriendsList_SignedOut")), I.createElement("div", { className: ve.detailText }, (0, A.Xx)("#FriendsList_SignedOut_Detail")), I.createElement("div", null, I.createElement("button", { className: ve.retryButton, onClick: this.SignIn }, (0, A.Xx)("#Friends_SignIn"))))) : I.createElement(rt, { friends: this.props.friends, chats: this.props.chats, searchString: t, fnOnSearchSelection: this.OnSearchSelection, onStartSearch: this.StartSearchOnKeyPress, browserContext: this.props.browserContext, bViewingIncomingInvites: this.state.bViewingIncomingInvites, onClose: this.ToggleViewingIncomingInvites }), I.createElement("div", { className: "friendListFooter" }, I.createElement(nt, null)));
}
[JS]   - Patched JS:   {
    let zzz1 = d.Ul.FriendStore.FriendGroupStore.incoming_invites_group.member_count > 0, zzz2 = d.Ul.FriendStore.ClanStore.clan_invites.length > 0, zzz3 = d.Ul.FriendStore.FriendGroupStore.outgoing_invites_group.member_count > 0, zzz4 = d.Ul.FriendStore.FriendGroupStore.incoming_invites_group.member_count + d.Ul.FriendStore.ClanStore.clan_invites.length;
    let e = this.props.friends.self, t = this.GetNormalizedSearchString(), n = this.state.bFriendTabSearch, i = "friendTab socialListTab activeTab";
    n && (i += " TabSearchActive");
    let r = {};
    this.state.tabLabelWidth > 0 && (r.width = this.state.tabLabelWidth + "px");
    let a = !1;
    if (this.props.popup) {
        let e = (0, m.rb)(this.props.popup);
        a = !(0, d.ns)(e, d.D);
    }
    let s = !1, l = 0, c = !1, h = "friendListButton friendSettingsButton friendsListNeedsUpdate no-drag";
    null != m.g_FriendsUIDesktopApp && ((s = m.g_FriendsUIDesktopApp.BNeedsUpdate()), (l = m.g_FriendsUIDesktopApp.GetSecondsOutOfDate()), l < 432000 ? (s = !1) : l > 604800 && ((h += " friendsListVeryOutOfDate"), (c = !0)));
    let u = this.props.chats.GetActiveVoiceChat(), p = !1;
    (this.props.chats.VoiceChat.IsAnyVoiceActive() || u) && (p = !0), this.UpdateWindowIcon();
    let _ = d.Ul.SettingsStore.FriendsSettings.bCompactFriendsList, g = this.props.collapsed, C = "friendlist", f = m.g_FriendsUIDesktopApp && m.g_FriendsUIDesktopApp.IsDesktopUIActive();
    _ && (C += " compactView"), s && (C += " needsUpdate"), g && this.props.collapsible && (C += " collapsed");
    const v = d.Ul.FriendStore.BIsOfflineMode(), S = a;
    return I.createElement("div", { className: C }, I.createElement("div", { className: (0, Ce.Z)("friendListHeaderContainer", "titleBarContainer", (0, Oe.Uy)() && "OSX") }, this.props.popup && o.De.IN_CLIENT && I.createElement(me.T, { hideMin: S, hideMax: S, popup: this.props.popup, className: "chatTitleBar" }), this.props.collapsible && I.createElement("div", { className: "friendListCollapse no-drag" }, I.createElement("div", { className: "friendListButton friendCollapseButton no-drag " + (g ? "Collapsed" : ""), onClick: this.ToggleCollapseExpand }, I.createElement(X.NP6, null))), I.createElement(ot, { popup: this.props.popup && this.props.popup, currentUser: e }), I.createElement("div", { className: "friendListButtons" }, s && I.createElement("div", { className: h, onClick: this.OnDoFriendsListUpdate, title: c ? (0, A.Xx)("#Tooltip_FriendsListUpdate_VeryOld") : (0, A.Xx)("#Tooltip_FriendsListUpdate") }, I.createElement(X.Lao, null)), !f && I.createElement("div", { className: "friendListButton friendSettingsButton no-drag", onClick: this.OnSettingsClick, title: (0, A.Xx)("#Tooltip_Settings") }, I.createElement(X.Zrf, null))), !v && I.createElement(I.Fragment, null, I.createElement(U.Z, null, p && I.createElement(V.Z, { key: "activeVoiceControls1", classNames: "activevoice-anim", timeout: 500 }, I.createElement(Ne, { chats: this.props.chats }))), I.createElement(it, { browserContext: this.props.browserContext }), I.createElement(G, { FavoritesStore: this.props.friends.FavoritesStore, bInOverlay: a }), I.createElement("div", { className: "socialTabSearchContainer" }, I.createElement("div", { className: "socialTabContainer" }, I.createElement("div", { className: i }, I.createElement("div", { className: "tabLabel", style: r, ref: this.BindTabLabel, onClick: n ? void 0 : this.OnTabSearchClick }, (0, A.Xx)("#tab_friends")), I.createElement("div", { className: "friendsTabButtonsContainer" }, I.createElement("div", { className: "TabSearchButton", onClick: n ? null : this.OnTabSearchClick }, I.createElement(U.Z, { className: "tabSearchTransitionGroup" }, n && I.createElement(V.Z, { className: "tabSearchTransition", key: "tabSearch", classNames: "tab-search-anim", timeout: 500 }, I.createElement("div", { className: "socialSearchContainer" }, I.createElement("form", { className: "socialInputContainer" + (n ? " SearchActive" : ""), name: "friendSearchForm", onSubmit: this.OnSearchSubmit }, I.createElement("div", { className: "inputContainer no-drag" }, I.createElement("input", { id: "friendSearchInputID", className: "friendSearchInput", autoFocus: !0, type: "text", name: "friendSearch", placeholder: (0, A.Xx)("#SearchFriends"), value: this.state.searchString, onInput: this.OnSearchInput, onKeyDown: this.OnSearchKeyDown, autoComplete: "off", ref: this.OnSearchInputRef }), I.createElement("div", { className: "friendSearchClear", onClick: this.OnClearSearch }, I.createElement(X.pVO, null))))))), I.createElement("div", { className: "searchIconButton", onClick: this.OnTabSearchClick, title: (0, A.Xx)("#Tooltip_SearchFriends") }, I.createElement(X.YtI, null))), I.createElement(Je, { fnToggleViewingIncomingInvites: this.ToggleViewingIncomingInvites, bViewingIncomingInvites: this.state.bViewingIncomingInvites }), I.createElement(P.ns, { href: o.De.COMMUNITY_BASE_URL + "friends/add" }, I.createElement("div", { className: "friendListButton addFriendButton no-drag", title: (0, A.Xx)("#Tooltip_AddFriend") }, I.createElement(X.yBp, null)))))))), I.createElement("div", { className: "disconnectBlocker" })), v ? I.createElement("div", { className: ve.OfflineContainer }, I.createElement("div", { className: ve.OfflineMessage }, I.createElement("div", { className: ve.summaryText }, (0, A.Xx)("#FriendsList_SignedOut")), I.createElement("div", { className: ve.detailText }, (0, A.Xx)("#FriendsList_SignedOut_Detail")), I.createElement("div", null, I.createElement("button", { className: ve.retryButton, onClick: this.SignIn }, (0, A.Xx)("#Friends_SignIn"))))) : I.createElement(rt, { friends: this.props.friends, chats: this.props.chats, searchString: t, fnOnSearchSelection: this.OnSearchSelection, onStartSearch: this.StartSearchOnKeyPress, browserContext: this.props.browserContext, bViewingIncomingInvites: this.state.bViewingIncomingInvites, onClose: this.ToggleViewingIncomingInvites }), I.createElement("div", { className: "friendListFooter" }, I.createElement(nt, null)));
}
[JS] > Detection 'FixBrokenInviteListInviteItems' matched >> Line 26823, char 13 >> Node: 
[JS]   - Original JS:  {
    var e, t, n, i, r, a, l;
    let m = this.props.searchString && this.props.searchString.length > 0, u = m, p = this.IsCollapsed() && !m && !this.state.friendDrag, _ = [], g = this.IsInviteGroup(), C = this.props.group.m_eDisplayType == c.h1.eOfflineOnly, f = !1;
    if (!p) {
        let o, l = !1;
        if (((o = this.props.searchString && this.props.searchString.length ? this.props.group.GetMembersMatchingSearch(this.props.searchString) : this.props.group.member_list), this.state.friendDrag && (this.props.group.HasMember(this.state.friendDrag.accountid) ? (l = !0) : (o = o.concat(this.state.friendDrag).sort(s.Xp.DefaultFriendSortComparator))), C && this.state.bSortOfflineByRecent && ((o = this.props.group.member_list_unsorted.slice().sort(s.Xp.FriendSortByLastSeenComparator)), (f = !0)), g)) {
            let e = d.Ul.FriendStore.FriendGroupStore.incoming_invites_group;
            o = o.slice().sort((t, n) => {
                let i = e.map_steamid_to_mutual_friends.get(t.steamid64), o = e.map_steamid_to_mutual_friends.get(n.steamid64), r = (i ? i.size : 0) - (o ? o.size : 0);
                return r > 0 || (0 == r && t.accountid > n.accountid) ? -1 : 1;
            });
        }
        let c = null;
        !m && this.props.group.should_filter_categorized_friends && (c = d.Ul.FriendStore.FriendGroupStore.categorized_friend_set);
        for (let s of o) {
            if (this.props.setExcludedFriends && this.props.setExcludedFriends.has(s.accountid))
                continue;
            if (c && c.has(s.accountid))
                continue;
            let o, m, d, h = 4 == s.efriendrelationship, u = this.state.friendDrag != s || l ? "" : "dropGhost";
            this.state.friendDraggedOut == s && this.state.friendDrag != s && (u += " dragOriginGhost");
            let p = null !== (e = this.props.gamepadEventOverrides) && void 0 !== e ? e : {};
            if (g) {
                let e = this.m_actions.get(s.accountid);
                (o = e && "accept" == e.action ? "bright" : "dim"),
                    (m = !e || ("decline" != e.action && "block" != e.action) ? "dim" : "bright"),
                    (d = !e || ("decline" != e.action && "block" != e.action) ? "" : " declined"),
                    e && "accept" == e.action ? (u += "bright") : !e || ("decline" != e.action && "block" != e.action) || (u += "dim"),
                    (null === (t = this.context) || void 0 === t ? void 0 : t.IN_GAMEPADUI) &&
                        ((p.onOKButton = (e) => {
                            let t = R.RA(e);
                            this.AcceptInvite(t, s);
                        }),
                            (p.onOKActionDescription = (0, A.Xx)("#FriendGroup_Tip_Accept")),
                            (p.onSecondaryButton = (e) => {
                                let t = R.RA(e);
                                this.BlockInvite(t, s);
                            }),
                            (p.onSecondaryActionDescription = (0, A.Xx)("#Button_Block")),
                            (p.onOptionsButton = (e) => {
                                let t = R.RA(e);
                                this.DeclineInvite(t, s);
                            }),
                            (p.onOptionsActionDescription = (0, A.Xx)("#FriendGroup_Tip_Decline")));
            }
            _.push(I.createElement(V.Z, { className: g ? "friendInviteContainer" + d : "friendCategoryContainer", key: s.accountid, classNames: "friend-anim", timeout: 320 }, I.createElement("div", null, I.createElement(gt, Object.assign({ friend: s, key: s.accountid, className: u, context: this.GetFriendRenderContext(), bInOverlay: this.props.bInOverlay, noActions: g && (null === (n = this.context) || void 0 === n ? void 0 : n.IN_GAMEPADUI), action: h || (g && (null === (i = this.context) || void 0 === i ? void 0 : i.IN_GAMEPADUI)) ? () => { } : this.OnFriendSelected }, this.props.friendProps, { gamepadEventOverrides: p, bFriendsListEntry: !0 })), g && !(null === (r = this.context) || void 0 === r ? void 0 : r.IN_GAMEPADUI) && I.createElement("div", { className: "friendInviteButtons" }, I.createElement("div", { className: "friendInviteButton acceptFriendInvite " + o, onClick: () => this.OnAcceptInvite(s), title: (0, A.Xx)("#FriendGroup_Tip_Accept") }, I.createElement(X.JrY, null)), I.createElement("div", { className: "friendInviteButton declineFriendInvite " + m, onClick: () => this.OnDeclineInvite(s), title: (0, A.Xx)("#FriendGroup_Tip_Decline") }, I.createElement(X.pVO, null))), g && !(null === (a = this.context) || void 0 === a ? void 0 : a.IN_GAMEPADUI) && I.createElement("div", { className: "friendInviteBlockContainer" }, I.createElement($.ji, { onChange: (e) => this.OnBlockInvite(e, s) }), I.createElement("div", { className: "displayColumn" }, I.createElement("div", { className: "blockCommunicationLabel" }, (0, A.Xx)("#FriendGroup_IncomingInvites_Block")), I.createElement("div", { className: "blockCommunicationLabel subtitle" }, (0, A.Xx)("#FriendGroup_IncomingInvites_Block_desc")))))));
        }
    }
    let v = "friendGroup", S = !1, b = !1, y = !1;
    if ((u && (v += " noTransitions"), this.props.group.modifiable ? ((v += " taggedGroup "), (S = !0)) : this.props.group.m_eDisplayType == c.h1.eOnlineOnlyNotInGame ? ((v += " onlineFriends "), (b = !0)) : this.props.group.m_eDisplayType == c.h1.eOfflineOnly ? ((v += " offlineFriends "), (y = !0)) : this.IsInviteGroup() ? (v += " friendRequests ") : this.IsOutGoingInviteGroup() && (v += " friendOutgoingRequests "), m && (!_ || !_.length)))
        return I.createElement("div", { className: "friendSearchNoResultsContainer" }, I.createElement("div", null, (0, A.Xx)("#FriendGroup_Search_NoResults", this.props.searchString)), I.createElement("div", { className: "searchSteamSuggestion" }, (0, A.Xx)("#FriendGroup_Search_CantFind")), I.createElement(P.ns, { href: o.De.COMMUNITY_BASE_URL + "search/users" }, (0, A.Xx)("#FriendGroup_Search_Link")));
    if (0 == _.length && !this.IsCollapsed())
        return null;
    let D = 0 != this.m_actions.size, w = "SortByRecent";
    f && (w += " Recent"), p && (w += " Collapsed");
    let M = !this.IsInviteGroup() && !this.IsOutGoingInviteGroup(), k = { onActivate: this.ToggleCollapsed, onOKActionDescription: (0, A.Xx)(p ? "#FriendGroup_Expand" : "#FriendGroup_Collapse"), onContextMenu: this.OnContextMenu, onMenuButton: M && this.OnContextMenu, onMenuActionDescription: M ? (0, A.Xx)("#FriendGroup_Options") : void 0 };
    return I.createElement(h.G, Object.assign({ className: v }, this.GetDragDropProps(this.props.group.modifiable || this.props.group.accepts_group_removals)), I.createElement(E.s, { className: "groupHeaderContainer", "flow-children": "row", focusable: !1 }, !m && I.createElement(E.s, Object.assign({ className: "groupName" + (p ? " Collapsed" : "") }, k), I.createElement("div", { className: "ExpandPlusMinus" }, I.createElement(X.FUf, null)), this.props.group.icon_url && I.createElement("img", { className: "groupIcon", src: this.props.group.icon_url }), this.props.group.name, !m && I.createElement("span", { className: this.IsCollapsed() ? "groupCount collapsed" : "groupCount" }, "(", this.props.group.member_count, ")"), S && I.createElement("hr", null)), y && I.createElement(E.s, { className: w, focusable: !0, onActivate: this.ToggleOfflineSortMethod, title: f ? (0, A.Xx)("#FriendGroup_Tip_SortByRecent") : (0, A.Xx)("#FriendGroup_Tip_SortByAlphabet"), onOKActionDescription: (0, A.Xx)("#FriendGroup_ChangeSort") }, I.createElement(X.hnm, null))), I.createElement(U.Z, { className: "groupList", enter: !u, exit: !u }, _, g &&
        !(null === (l = this.context) || void 0 === l ? void 0 : l.IN_GAMEPADUI) &&
        I.createElement(V.Z, { key: "inviteButtons", classNames: "opacityfade-anim", timeout: 320 }, I.createElement("div", { className: "confirmInviteRequestContainer" }, I.createElement("div", { className: "confirmInviteRequestActions" }, D ? I.createElement("div", { className: "confirmInviteButton confirmInvites", onClick: this.OnConfirmChanges }, (0, A.Xx)("#FriendGroup_ConfirmInvites")) : I.createElement("div", { className: "confirmInviteButton confirmInvites dim" }, (0, A.Xx)("#FriendGroup_ConfirmInvites")), I.createElement("div", { className: "confirmInviteButton ignoreAllRequests", onClick: this.OnIgnoreAllInvites }, (0, A.Xx)("#FriendGroup_AllIgnore"))), I.createElement(E.s, { className: "cancelAddFriends", onActivate: this.OnCloseInvites, onOKActionDescription: (0, A.Xx)("#FriendGroup_Close"), title: (0, A.Xx)("#FriendGroup_Close") }, I.createElement(X.Ehc, { angle: -90 }))))), S && I.createElement("div", { className: "dropTargetBox" }));
}
[JS]   - Patched JS:   {
    let localThis = this;
    setTimeout(function () { localThis.forceUpdate(); }, 1);
    var e, t, n, i, r, a, l;
    let m = this.props.searchString && this.props.searchString.length > 0, u = m, p = this.IsCollapsed() && !m && !this.state.friendDrag, _ = [], g = this.IsInviteGroup(), C = this.props.group.m_eDisplayType == c.h1.eOfflineOnly, f = !1;
    if (!p) {
        let o, l = !1;
        if (((o = this.props.searchString && this.props.searchString.length ? this.props.group.GetMembersMatchingSearch(this.props.searchString) : this.props.group.member_list), this.state.friendDrag && (this.props.group.HasMember(this.state.friendDrag.accountid) ? (l = !0) : (o = o.concat(this.state.friendDrag).sort(s.Xp.DefaultFriendSortComparator))), C && this.state.bSortOfflineByRecent && ((o = this.props.group.member_list_unsorted.slice().sort(s.Xp.FriendSortByLastSeenComparator)), (f = !0)), g)) {
            let e = d.Ul.FriendStore.FriendGroupStore.incoming_invites_group;
            o = o.slice().sort((t, n) => {
                let i = e.map_steamid_to_mutual_friends.get(t.steamid64), o = e.map_steamid_to_mutual_friends.get(n.steamid64), r = (i ? i.size : 0) - (o ? o.size : 0);
                return r > 0 || (0 == r && t.accountid > n.accountid) ? -1 : 1;
            });
        }
        let c = null;
        !m && this.props.group.should_filter_categorized_friends && (c = d.Ul.FriendStore.FriendGroupStore.categorized_friend_set);
        for (let s of o) {
            if (this.props.setExcludedFriends && this.props.setExcludedFriends.has(s.accountid))
                continue;
            if (c && c.has(s.accountid))
                continue;
            let o, m, d, h = 4 == s.efriendrelationship, u = this.state.friendDrag != s || l ? "" : "dropGhost";
            this.state.friendDraggedOut == s && this.state.friendDrag != s && (u += " dragOriginGhost");
            let p = null !== (e = this.props.gamepadEventOverrides) && void 0 !== e ? e : {};
            if (g) {
                let e = this.m_actions.get(s.accountid);
                (o = e && "accept" == e.action ? "bright" : "dim"), (m = !e || ("decline" != e.action && "block" != e.action) ? "dim" : "bright"), (d = !e || ("decline" != e.action && "block" != e.action) ? "" : " declined"), e && "accept" == e.action ? (u += "bright") : !e || ("decline" != e.action && "block" != e.action) || (u += "dim"), (null === (t = this.context) || void 0 === t ? void 0 : t.IN_GAMEPADUI) && ((p.onOKButton = (e) => {
                    let t = R.RA(e);
                    this.AcceptInvite(t, s);
                }), (p.onOKActionDescription = (0, A.Xx)("#FriendGroup_Tip_Accept")), (p.onSecondaryButton = (e) => {
                    let t = R.RA(e);
                    this.BlockInvite(t, s);
                }), (p.onSecondaryActionDescription = (0, A.Xx)("#Button_Block")), (p.onOptionsButton = (e) => {
                    let t = R.RA(e);
                    this.DeclineInvite(t, s);
                }), (p.onOptionsActionDescription = (0, A.Xx)("#FriendGroup_Tip_Decline")));
            }
            _.push(I.createElement(V.Z, { className: g ? "friendInviteContainer" + d : "friendCategoryContainer", key: s.accountid, classNames: "friend-anim", timeout: 320 }, I.createElement("div", null, I.createElement(gt, Object.assign({ friend: s, key: s.accountid, className: u, context: this.GetFriendRenderContext(), bInOverlay: this.props.bInOverlay, noActions: g && (null === (n = this.context) || void 0 === n ? void 0 : n.IN_GAMEPADUI), action: h || (g && (null === (i = this.context) || void 0 === i ? void 0 : i.IN_GAMEPADUI)) ? () => {
                } : this.OnFriendSelected }, this.props.friendProps, { gamepadEventOverrides: p, bFriendsListEntry: !0 })), g && !(null === (r = this.context) || void 0 === r ? void 0 : r.IN_GAMEPADUI) && I.createElement("div", { className: "friendInviteButtons" }, I.createElement("div", { className: "friendInviteButton acceptFriendInvite " + o, onClick: () => this.OnAcceptInvite(s), title: (0, A.Xx)("#FriendGroup_Tip_Accept") }, I.createElement(X.JrY, null)), I.createElement("div", { className: "friendInviteButton declineFriendInvite " + m, onClick: () => this.OnDeclineInvite(s), title: (0, A.Xx)("#FriendGroup_Tip_Decline") }, I.createElement(X.pVO, null))), g && !(null === (a = this.context) || void 0 === a ? void 0 : a.IN_GAMEPADUI) && I.createElement("div", { className: "friendInviteBlockContainer" }, I.createElement($.ji, { onChange: (e) => this.OnBlockInvite(e, s) }), I.createElement("div", { className: "displayColumn" }, I.createElement("div", { className: "blockCommunicationLabel" }, (0, A.Xx)("#FriendGroup_IncomingInvites_Block")), I.createElement("div", { className: "blockCommunicationLabel subtitle" }, (0, A.Xx)("#FriendGroup_IncomingInvites_Block_desc")))))));
        }
    }
    let v = "friendGroup", S = !1, b = !1, y = !1;
    if ((u && (v += " noTransitions"), this.props.group.modifiable ? ((v += " taggedGroup "), (S = !0)) : this.props.group.m_eDisplayType == c.h1.eOnlineOnlyNotInGame ? ((v += " onlineFriends "), (b = !0)) : this.props.group.m_eDisplayType == c.h1.eOfflineOnly ? ((v += " offlineFriends "), (y = !0)) : this.IsInviteGroup() ? (v += " friendRequests ") : this.IsOutGoingInviteGroup() && (v += " friendOutgoingRequests "), m && (!_ || !_.length)))
        return I.createElement("div", { className: "friendSearchNoResultsContainer" }, I.createElement("div", null, (0, A.Xx)("#FriendGroup_Search_NoResults", this.props.searchString)), I.createElement("div", { className: "searchSteamSuggestion" }, (0, A.Xx)("#FriendGroup_Search_CantFind")), I.createElement(P.ns, { href: o.De.COMMUNITY_BASE_URL + "search/users" }, (0, A.Xx)("#FriendGroup_Search_Link")));
    if (0 == _.length && !this.IsCollapsed())
        return null;
    let D = 0 != this.m_actions.size, w = "SortByRecent";
    f && (w += " Recent"), p && (w += " Collapsed");
    let M = !this.IsInviteGroup() && !this.IsOutGoingInviteGroup(), k = { onActivate: this.ToggleCollapsed, onOKActionDescription: (0, A.Xx)(p ? "#FriendGroup_Expand" : "#FriendGroup_Collapse"), onContextMenu: this.OnContextMenu, onMenuButton: M && this.OnContextMenu, onMenuActionDescription: M ? (0, A.Xx)("#FriendGroup_Options") : void 0 };
    return I.createElement(h.G, Object.assign({ className: v }, this.GetDragDropProps(this.props.group.modifiable || this.props.group.accepts_group_removals)), I.createElement(E.s, { className: "groupHeaderContainer", "flow-children": "row", focusable: !1 }, !m && I.createElement(E.s, Object.assign({ className: "groupName" + (p ? " Collapsed" : "") }, k), I.createElement("div", { className: "ExpandPlusMinus" }, I.createElement(X.FUf, null)), this.props.group.icon_url && I.createElement("img", { className: "groupIcon", src: this.props.group.icon_url }), this.props.group.name, !m && I.createElement("span", { className: this.IsCollapsed() ? "groupCount collapsed" : "groupCount" }, "(", this.props.group.member_count, ")"), S && I.createElement("hr", null)), y && I.createElement(E.s, { className: w, focusable: !0, onActivate: this.ToggleOfflineSortMethod, title: f ? (0, A.Xx)("#FriendGroup_Tip_SortByRecent") : (0, A.Xx)("#FriendGroup_Tip_SortByAlphabet"), onOKActionDescription: (0, A.Xx)("#FriendGroup_ChangeSort") }, I.createElement(X.hnm, null))), I.createElement(U.Z, { className: "groupList", enter: !u, exit: !u }, _, g && !(null === (l = this.context) || void 0 === l ? void 0 : l.IN_GAMEPADUI) && I.createElement(V.Z, { key: "inviteButtons", classNames: "opacityfade-anim", timeout: 320 }, I.createElement("div", { className: "confirmInviteRequestContainer" }, I.createElement("div", { className: "confirmInviteRequestActions" }, D ? I.createElement("div", { className: "confirmInviteButton confirmInvites", onClick: this.OnConfirmChanges }, (0, A.Xx)("#FriendGroup_ConfirmInvites")) : I.createElement("div", { className: "confirmInviteButton confirmInvites dim" }, (0, A.Xx)("#FriendGroup_ConfirmInvites")), I.createElement("div", { className: "confirmInviteButton ignoreAllRequests", onClick: this.OnIgnoreAllInvites }, (0, A.Xx)("#FriendGroup_AllIgnore"))), I.createElement(E.s, { className: "cancelAddFriends", onActivate: this.OnCloseInvites, onOKActionDescription: (0, A.Xx)("#FriendGroup_Close"), title: (0, A.Xx)("#FriendGroup_Close") }, I.createElement(X.Ehc, { angle: -90 }))))), S && I.createElement("div", { className: "dropTargetBox" }));
}
[JS] > Detection 'ShimSettingsStoreIsSteamInTournamentMode' matched >> Line 29355, char 12 >> Node: 
[JS]   - Original JS:  r.Ul.SettingsStore.IsSteamInTournamentMode()
[JS]   - Patched JS:   /*r.Ul.SettingsStore.IsSteamInTournamentMode()*/ TFP.Compat.SettingsStore_IsSteamInTournamentMode(r.Ul.SettingsStore, "IsSteamInTournamentMode")
[JS] > Detection 'FixBlackFrameBug' matched >> Line 33634, char 31 >> Node: 
[JS]   - Original JS:  s && (this.OnCreateInternal(), i != c.IF.k_EWindowBringToFrontInvalid && this.Focus(i))
[JS]   - Patched JS:   /*s && (this.OnCreateInternal(), i != c.IF.k_EWindowBringToFrontInvalid && this.Focus(i))*/ s ? (this.OnCreateInternal(), i != c.IF.k_EWindowBringToFrontInvalid && this.Focus(i)) : this.OnCreateInternal()
[JS] > Detection 'RewriteEarly2024NewWindowGettersUsage' matched >> Line 33707, char 96 >> Node: 
[JS]   - Original JS:  this.m_popup.SteamClient.Window.GetWindowRestoreDetails()
[JS]   - Patched JS:   /*this.m_popup.SteamClient.Window.GetWindowRestoreDetails()*/ new Promise((e, t) => {
    this.m_popup.SteamClient.Window.GetWindowRestoreDetails((t) => {
        e(t);
    });
})
[JS] > Detection 'RewriteEarly2024NewWindowGettersUsage' matched >> Line 33710, char 90 >> Node: 
[JS]   - Original JS:  this.m_popup.SteamClient.Window.IsWindowMinimized()
[JS]   - Patched JS:   /*this.m_popup.SteamClient.Window.IsWindowMinimized()*/ new Promise((e, t) => {
    this.m_popup.SteamClient.Window.IsWindowMinimized((t) => {
        e(t);
    });
})
[JS] > Detection 'RewriteEarly2024NewWindowGettersUsage' matched >> Line 33713, char 90 >> Node: 
[JS]   - Original JS:  this.m_popup.SteamClient.Window.IsWindowMaximized()
[JS]   - Patched JS:   /*this.m_popup.SteamClient.Window.IsWindowMaximized()*/ new Promise((e, t) => {
    this.m_popup.SteamClient.Window.IsWindowMaximized((t) => {
        e(t);
    });
})
[JS] > Detection 'ShimSteamClientBrowserGetBrowserId' matched >> Line 33858, char 99 >> Node: 
[JS]   - Original JS:  t.center_on_window.SteamClient.Browser.GetBrowserID()
[JS]   - Patched JS:   /*t.center_on_window.SteamClient.Browser.GetBrowserID()*/ TFP.Compat.SteamClient_Browser_GetBrowserID(t.center_on_window.SteamClient)
[JS] > Detection 'DisableBrokenXssAttackValveReliance' matched >> Line 37194, char 6 >> Node: 
[JS]   - Original JS:  try {
    if (window.parent != window) {
        const t = window.parent;
        if (t.__SHARED_FRIENDSUI_GLOBALS && t.__SHARED_FRIENDSUI_GLOBALS[e])
            return t.__SHARED_FRIENDSUI_GLOBALS[e];
        (0, o.X)(!1, `SharedFriendsUIGlobal "${e}" not initialized by parent, proceeding with local copy`);
    }
}
catch (e) { }
[JS]   - Patched JS:   /*try {
    if (window.parent != window) {
        const t = window.parent;
        if (t.__SHARED_FRIENDSUI_GLOBALS && t.__SHARED_FRIENDSUI_GLOBALS[e])
            return t.__SHARED_FRIENDSUI_GLOBALS[e];
        (0, o.X)(!1, `SharedFriendsUIGlobal "${e}" not initialized by parent, proceeding with local copy`);
    }
}
catch (e) { }*/ ;
[JS] > Detection 'DisableLate2023ChatCensorshipFeatureAddition' matched >> Line 46269, char 31 >> Node: 
[JS]   - Original JS:  {
    this.m_WebUIServiceTransport.BIsValid() && (this.m_WebUIServiceTransport.messageHandlers.RegisterServiceNotificationHandler(K.gi.NotifyTextFilterDictionaryChangedHandler, this.OnTextFilterDictionaryChanged), this.InitSteamEngineLanguage(h.De.LANGUAGE), "english" !== h.De.LANGUAGE && this.InitSteamEngineLanguage("english"));
}
[JS]   - Patched JS:   {
    /*this.m_WebUIServiceTransport.BIsValid() && (this.m_WebUIServiceTransport.messageHandlers.RegisterServiceNotificationHandler(K.gi.NotifyTextFilterDictionaryChangedHandler, this.OnTextFilterDictionaryChanged), this.InitSteamEngineLanguage(h.De.LANGUAGE), "english" !== h.De.LANGUAGE && this.InitSteamEngineLanguage("english"));*/ ;
}
[JS] > Detection 'DisableLate2023ChatCensorshipFeatureAddition' matched >> Line 46417, char 15 >> Node: 
[JS]   - Original JS:  if (this.m_WebUIServiceTransport.BIsValid())
    try {
        {
            const t = yield this.GetSteamEngineTextFilterDictionary(e, "banned");
            this.m_strBannedWords += t.Body().dictionary();
        }
        {
            const t = yield this.GetSteamEngineTextFilterDictionary(e, "profanity");
            this.m_strProfanityWords += t.Body().dictionary();
        }
        n = !0;
    }
    catch (e) {
        console.warn("LoadLanguage caught while loading from cache:", e);
    }
[JS]   - Patched JS:   if (/*this.m_WebUIServiceTransport.BIsValid()*/ false)
    try {
        {
            const t = yield this.GetSteamEngineTextFilterDictionary(e, "banned");
            this.m_strBannedWords += t.Body().dictionary();
        }
        {
            const t = yield this.GetSteamEngineTextFilterDictionary(e, "profanity");
            this.m_strProfanityWords += t.Body().dictionary();
        }
        n = !0;
    }
    catch (e) {
        console.warn("LoadLanguage caught while loading from cache:", e);
    }
[JS] > Detection 'ShimSteamClientOpenVrSoia' matched >> Line 46846, char 185 >> Node: 
[JS]   - Original JS:  r.SetOverlayInteractionAffordance(t, l)
[JS]   - Patched JS:   /*r.SetOverlayInteractionAffordance(t, l)*/ TFP.Compat.SteamClient_OpenVR_SetOverlayInteractionAffordance(i.SteamClient, t, l)
[JS] > Detection 'RewriteSteamClientWindowNewGetterPromises' matched >> Line 47427, char 22 >> Node: 
[JS]   - Original JS:  i.SteamClient.Window.GetWindowRestoreDetails().then((e) => {
    const t = this.state.menuLeft - this.parentWin.screenX, n = this.state.menuTop - this.parentWin.screenY;
    try {
        null == o || o.SteamClient.Window.PositionWindowRelative(e, t, n, this.state.menuWidth, this.state.menuHeight);
    }
    catch (e) {
        console.error(e);
    }
})
[JS]   - Patched JS:   /*i.SteamClient.Window.GetWindowRestoreDetails().then((e) => {
    const t = this.state.menuLeft - this.parentWin.screenX, n = this.state.menuTop - this.parentWin.screenY;
    try {
        null == o || o.SteamClient.Window.PositionWindowRelative(e, t, n, this.state.menuWidth, this.state.menuHeight);
    }
    catch (e) {
        console.error(e);
    }
})*/ i.SteamClient.Window.GetWindowRestoreDetails((e) => {
    const t = this.state.menuLeft - this.parentWin.screenX, n = this.state.menuTop - this.parentWin.screenY;
    try {
        null == o || o.SteamClient.Window.PositionWindowRelative(e, t, n, this.state.menuWidth, this.state.menuHeight);
    }
    catch (e) {
        console.error(e);
    }
})
[JS] > Detection 'ShimSteamClientBrowserGetBrowserIdCheck' matched >> Line 52797, char 31 >> Node: 
[JS]   - Original JS:  (null === (r = null === (o = null == i ? void 0 : i.SteamClient) || void 0 === o ? void 0 : o.Browser) || void 0 === r ? void 0 : r.GetBrowserID)
[JS]   - Patched JS:   /*(null === (r = null === (o = null == i ? void 0 : i.SteamClient) || void 0 === o ? void 0 : o.Browser) || void 0 === r ? void 0 : r.GetBrowserID)*/ TFP.Compat.SteamClient_HasGetBrowserID(i.SteamClient)
[JS] > Detection 'ShimSteamClientBrowserGetBrowserId' matched >> Line 52797, char 182 >> Node: 
[JS]   - Original JS:  i.SteamClient.Browser.GetBrowserID()
[JS]   - Patched JS:   /*i.SteamClient.Browser.GetBrowserID()*/ TFP.Compat.SteamClient_Browser_GetBrowserID(i.SteamClient)
[JS] > Detection 'ShimSteamClientBrowserGetBrowserId' matched >> Line 52924, char 9 >> Node: 
[JS]   - Original JS:  s.SteamClient.Browser.GetBrowserID()
[JS]   - Patched JS:   /*s.SteamClient.Browser.GetBrowserID()*/ TFP.Compat.SteamClient_Browser_GetBrowserID(s.SteamClient)
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 54135, char 13 >> Node: 
[JS]   - Original JS:  n.p + "images/webui/8669e97b288da32670e77181618c3dfb.png"
[JS]   - Patched JS:   /*n.p + "images/webui/8669e97b288da32670e77181618c3dfb.png"*/ TFP.Resources.SelectCdnResourceUrl(n.p, "images/webui/8669e97b288da32670e77181618c3dfb.png", "Root_Public", "JsImages")
[JS] > Detection 'RewriteSteamClientWindowNewGetterPromises' matched >> Line 56319, char 9 >> Node: 
[JS]   - Original JS:  e.SteamClient.Window.IsWindowMaximized().then((e) => {
    n(e);
})
[JS]   - Patched JS:   /*e.SteamClient.Window.IsWindowMaximized().then((e) => {
    n(e);
})*/ e.SteamClient.Window.IsWindowMaximized((e) => {
    n(e);
})
[JS] > Detection 'AddHtmlWebuiConfigOnLoadHook' matched >> Line 57037, char 21 >> Node: 
[JS]   - Original JS:  {
    const t = {}, n = d("config", e);
    n && (delete n.SESSIONID, Object.assign(r.De, n), (t.config = !0));
    const i = d("userinfo", e);
    i && (Object.assign(r.L7, i), (t.userConfig = !0), r.L7.is_support && _() && (r.L7.is_support = !1));
    const o = d("broadcast", e);
    o && (Object.assign(r.dk, o), (t.broadcastConfig = !0));
    const s = d("community", e);
    s && (Object.assign(r.JA, s), (t.communityConfig = !0));
    const l = d("event", e);
    return l && (Object.assign(r.Wj, l), (t.eventConfig = !0)), t;
}
[JS]   - Patched JS:   {
    const t = {}, n = d("config", e);
    n && (delete n.SESSIONID, Object.assign(r.De, n), (t.config = !0));
    TFP.Hooks.OnWebuiConfigLoaded(r.De);
    const i = d("userinfo", e);
    i && (Object.assign(r.L7, i), (t.userConfig = !0), r.L7.is_support && _() && (r.L7.is_support = !1));
    const o = d("broadcast", e);
    o && (Object.assign(r.dk, o), (t.broadcastConfig = !0));
    const s = d("community", e);
    s && (Object.assign(r.JA, s), (t.communityConfig = !0));
    const l = d("event", e);
    return l && (Object.assign(r.Wj, l), (t.eventConfig = !0)), t;
}
[JS] > Detection 'DisableContenthashGetParamOnFetches' matched >> Line 58081, char 15 >> Node: 
[JS]   - Original JS:  ".js?contenthash="
[JS]   - Patched JS:   /*".js?contenthash="*/ ".js?_contenthash_="
[JS] > Detection 'DisableContenthashGetParamOnFetches' matched >> Line 58150, char 73 >> Node: 
[JS]   - Original JS:  ".css?contenthash="
[JS]   - Patched JS:   /*".css?contenthash="*/ ".css?_contenthash_="
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 58209, char 11 >> Node: 
[JS]   - Original JS:  s.p + i
[JS]   - Patched JS:   /*s.p + i*/ TFP.Resources.SelectCdnResourceUrl(s.p, i, "Root_Public", "JsCss")
[JS] > Detection 'RewriteCdnAssetUrlStringBuild' matched >> Line 58270, char 13 >> Node: 
[JS]   - Original JS:  s.p + s.u(t)
[JS]   - Patched JS:   /*s.p + s.u(t)*/ TFP.Resources.SelectCdnResourceUrl_JsLoaderDirect(s.p, s.u(t), "Root_Public", "CoreJs")
[JS] Total visited ast nodes: 597916
[JS] Total applied patches: 54
[JS] Applied patches:
[JS]   -  'RewriteCdnAssetUrlStringBuild' (config: System.Dynamic.ExpandoObject ) applied 23 time(s)
[JS]   -  'ShimSettingsStoreIsSteamInTournamentMode' (config: System.Dynamic.ExpandoObject ) applied 7 time(s)
[JS]   -  'ShimSteamClientIsSteamInTournamentMode' (config: System.Dynamic.ExpandoObject ) applied 1 time(s)
[JS]   -  'DisableMiniprofileBrokenBlurHandler' applied 1 time(s)
[JS]   -  'ShimSteamClientBrowserGetBrowserId' (config: System.Dynamic.ExpandoObject ) applied 4 time(s)
[JS]   -  'FixBlackFrameBug' applied 1 time(s)
[JS]   -  'DisableBrokenXssAttackValveReliance' applied 1 time(s)
[JS]   -  'DisableLate2023ChatCensorshipFeatureAddition' applied 2 time(s)
[JS]   -  'ShimSteamClientOpenVrSoia' (config: System.Dynamic.ExpandoObject ) applied 1 time(s)
[JS]   -  'ShimSteamClientBrowserGetBrowserIdCheck' (config: System.Dynamic.ExpandoObject ) applied 1 time(s)
[JS]   -  'AddHtmlWebuiConfigOnLoadHook' (config: System.Dynamic.ExpandoObject ) applied 1 time(s)
[JS]   -  'DisableContenthashGetParamOnFetches' applied 2 time(s)
[JS]   -  'RewriteSteamClientWindowNewGetterPromises' applied 3 time(s)
[JS]   -  'RewriteEarly2024NewWindowGettersUsage' (config: System.Dynamic.ExpandoObject ) applied 4 time(s)
[JS]   -  'FixBrokenInviteListAutoCloseOnDone' applied 1 time(s)
[JS]   -  'FixBrokenInviteListInviteItems' applied 1 time(s)

Reformatting rewritten js with prettier.io... OK

Writing to disk... OK

---------- |  Cleaning Snapshot  | ----------
Getting CLSTAMP from friends.js... OK
- CLSTMAP = 8825046
Using snapshot manifest for CLSTAMP 8657129 thru 8825046+ (exact range match for remote friends.js)

Deleting undeclared files
- Deleting 'index.000-original.html'... OK
- Deleting 'index.001-urlfix.html'... OK
- Deleting 'public/javascript/webui/friends.000-original.js'... OK
- Deleting 'public/javascript/webui/friends.001-demin.js'... OK
- Deleting 'public/javascript/webui/friends.002-patch.js'... OK
- Deleting 'public/shared/css/motiva_sans.000-original.css'... OK
- Deleting 'public/shared/css/motiva_sans.001-urlfix.css'... OK

Snapshot Maker :: Finished at 4/21/2024 3:34:52 PM
